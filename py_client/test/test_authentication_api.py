# coding: utf-8

"""
    Conjur

    This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: conj_maintainers@cyberark.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import conjur
from conjur.api.authentication_api import AuthenticationApi  # noqa: E501
from conjur.rest import ApiException


class TestAuthenticationApi(unittest.TestCase):
    """AuthenticationApi unit test stubs"""

    def setUp(self):
        self.api = conjur.api.authentication_api.AuthenticationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_change_password(self):
        """Test case for change_password

        Changes a userâ€™s password.  # noqa: E501
        """
        pass

    def test_enable_authenticator(self):
        """Test case for enable_authenticator

        Enables or disables authenticator defined without service_id.  # noqa: E501
        """
        pass

    def test_enable_authenticator_instance(self):
        """Test case for enable_authenticator_instance

        Enables or disables authenticator service instances.  # noqa: E501
        """
        pass

    def test_get_access_token(self):
        """Test case for get_access_token

        Gets a short-lived access token, which is required in the header of most subsequent API requests.   # noqa: E501
        """
        pass

    def test_get_access_token_via_aws(self):
        """Test case for get_access_token_via_aws

        Get a short-lived access token for applications running in AWS.  # noqa: E501
        """
        pass

    def test_get_access_token_via_azure(self):
        """Test case for get_access_token_via_azure

        Gets a short-lived access token for applications running in Azure.  # noqa: E501
        """
        pass

    def test_get_access_token_via_gcp(self):
        """Test case for get_access_token_via_gcp

        Gets a short-lived access token for applications running in Google Cloud Platform.   # noqa: E501
        """
        pass

    def test_get_access_token_via_jwt(self):
        """Test case for get_access_token_via_jwt

        Gets a short-lived access token for applications using JSON Web Token (JWT) to access the Conjur API.   # noqa: E501
        """
        pass

    def test_get_access_token_via_jwt_with_id(self):
        """Test case for get_access_token_via_jwt_with_id

        Gets a short-lived access token for applications using JSON Web Token (JWT) to access the Conjur API. Covers the case of use of optional URL parameter \"ID\"   # noqa: E501
        """
        pass

    def test_get_access_token_via_kubernetes(self):
        """Test case for get_access_token_via_kubernetes

        Gets a short-lived access token for applications running in Kubernetes.  # noqa: E501
        """
        pass

    def test_get_access_token_via_ldap(self):
        """Test case for get_access_token_via_ldap

        Gets a short-lived access token for users and hosts using their LDAP identity to access the Conjur API.   # noqa: E501
        """
        pass

    def test_get_access_token_via_oidc(self):
        """Test case for get_access_token_via_oidc

        Gets a short-lived access token for applications using OpenID Connect (OIDC) to access the Conjur API.   # noqa: E501
        """
        pass

    def test_get_api_key(self):
        """Test case for get_api_key

        Gets the API key of a user given the username and password via HTTP Basic Authentication.   # noqa: E501
        """
        pass

    def test_get_api_key_via_ldap(self):
        """Test case for get_api_key_via_ldap

        Gets the Conjur API key of a user given the LDAP username and password via HTTP Basic Authentication.   # noqa: E501
        """
        pass

    def test_k8s_inject_client_cert(self):
        """Test case for k8s_inject_client_cert

        For applications running in Kubernetes; sends Conjur a certificate signing request (CSR) and requests a client certificate injected into the application's Kubernetes pod.   # noqa: E501
        """
        pass

    def test_rotate_api_key(self):
        """Test case for rotate_api_key

        Rotates a role's API key.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
