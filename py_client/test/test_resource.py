# coding: utf-8

"""
    Conjur

    This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).  # noqa: E501

    The version of the OpenAPI document: 5.3.0
    Contact: conj_maintainers@cyberark.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import conjur
from conjur.models.resource import Resource  # noqa: E501
from conjur.rest import ApiException

class TestResource(unittest.TestCase):
    """Resource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Resource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = conjur.models.resource.Resource()  # noqa: E501
        if include_optional :
            return Resource(
                annotations = [
                    '0'
                    ], 
                created_at = '0', 
                id = '0', 
                owner = '0', 
                permissions = [
                    conjur.models.resource_permissions.Resource_permissions(
                        policy = '0', 
                        privilege = '0', 
                        role = '0', )
                    ], 
                policy = '0', 
                policy_versions = [
                    {"client_ip":"172.19.0.6","created_at":"2021-03-23T16:37:09.250+00:00","finished_at":"2021-03-23T16:37:09.435+00:00","id":"dev:policy:root","policy_sha256":"73d7b43ab17d69d163dedfaac88ec02a9c18ed8675abe4fe5643cd33470baf86","policy_text":"- !variable one/password\n- !variable testSecret\n","role":"dev:user:admin","version":15.0}
                    ], 
                restricted_to = [
                    '0'
                    ], 
                secrets = [
                    conjur.models.resource_secrets.Resource_secrets(
                        expires_at = '0', 
                        version = 1.337, )
                    ]
            )
        else :
            return Resource(
        )

    def testResource(self):
        """Test Resource"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
